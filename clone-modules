# download modules
coremodules=(
  'core/dune-common.git'
  'core/dune-geometry.git'
  'core/dune-grid.git'
  'core/dune-istl.git'
  'core/dune-localfunctions.git'
  'extensions/dune-alugrid.git'
)
femmodules=(
  'dune-fem/dune-fem.git'
  'dune-fem/dune-fem-dg.git'
  'dune-fem/dune-vem.git'
)
mkdir dist
mkdir repos
cd repos
echo "Cloning into branch $1"
for m in "${coremodules[@]}"; do
  git clone --depth 1 -b $1 https://gitlab.dune-project.org/$m
done
echo "Cloning into branch $2"
for m in "${femmodules[@]}"; do
  git clone --depth 1 -b $2 https://gitlab.dune-project.org/$m
done
packaging=$PWD/dune-common/bin/dunepackaging.py

# check if the commit in dune-common is tagged. If tagged use the tag as
# version number (assumes the tag is a valid python package version, i.e., v2.8.0rc1
# otherwise use the default 'dev' numbering.
tag=$(git describe --exact-match 2> \dev\null)
if [ $? -eq 0 ]; then
  echo "Use version" $version
  ./dune-common/bin/dunecontrol exec $packaging --onlysdist --version=$tag
else
  echo "Use dev versioning"
  ./dune-common/bin/dunecontrol exec $packaging --onlysdist
fi
mv */dist/*.tar.gz ../dist
cd ..
rm -rf repos
