# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 0 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
        matrix:
            os: [ubuntu-latest] #, macOS-latest]
            test: [core, extensions]
            python: [3.7,3.9]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update
            sudo apt install libopenmpi-dev openmpi-bin libsuperlu-dev libsuitesparse-dev petsc-dev paraview python3-paraview gmsh
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install libopenmpi-dev openmpi-bin libsuperlu-dev libsuitesparse-dev petsc-dev paraview python3-paraview gmsh
          fi
        shell: bash

      - name: Setup venv
        run: |
          python3 -m venv dune-env
          source dune-env/bin/activate
          pip install matplotlib scipy pygmsh petsc4py triangle
        shell: bash

      - name: Install dune modules
        run: |
          pip install dune-fem dune-fem-dg dune-vem
          DUNE_CONTROL_PATH=dune-env setup-dunepy.py --opts=config.opts
        shell: bash

      - name: Setup dune-py
        run: |
          python -m dune.fem tutorial
        shell: bash

      - name: Run tutorial
        run: |
          export DUNEPY_DISABLE_PLOTTING=1
          cd fem_tutorial
          python ../run.py ${{ matrix.test }}
        shell: bash
