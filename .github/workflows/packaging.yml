name: upload packages

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'Warning'
      upload:
        description: 'upload (testpypi | pypi)'
        required: true
        default: 'testpypi'
      runtest:
        description: "Run tests (only turn this off in exceptional circumstances)"
        required: true
        default: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # build packages
  build:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: clone dune modules and build
        run: |
          pip install scikit-build
          ./clone-modules

      - uses: actions/upload-artifact@v2
        with:
          name: packages
          path: dist

  # test packages
  test:
    if: ${{ github.event.inputs.runtest }} # && ${{ github.event_name != 'push' }}
    needs: build
    strategy:
        fail-fast: false
        matrix:
            os: [ubuntu-latest, macOS-latest]
            test: [core, extensions]
            python: [3.7,3.9]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt update
            sudo apt install libopenmpi-dev openmpi-bin libsuperlu-dev libsuitesparse-dev petsc-dev paraview python3-paraview gmsh
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install openmpi superlu suite-sparse paraview gmsh
          fi
        shell: bash

      - uses: actions/download-artifact@v2
        with:
          name: packages
          path: dist

      - name: Setup venv
        run: |
          python3 -m venv dune-env
          source dune-env/bin/activate
          pip install --upgrade pip
          pip install matplotlib scipy pygmsh triangle scikit-build
          if [ "$RUNNER_OS" == "Linux" ]; then
            pip install petsc4py
          fi
        shell: bash

      - name: Install dune modules
        run: |
          source dune-env/bin/activate
          pip install -v --find-links file://$PWD/dist dune-fem
        shell: bash

      - name: Install extension modules
        if: ${{ matrix.test == 'extensions' }}
        run: |
          source dune-env/bin/activate
          pip install -v --find-links file://$PWD/dist dune-fem-dg dune-vem
        shell: bash

      - name: Setup dune-py
        # macOS fails with python 3.7: Symbol not found: _PyCMethod_New
        if: ${{ matrix.python == '3.9' }} || ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          source dune-env/bin/activate
          pip list
          DUNE_CONTROL_PATH=dune-env setup-dunepy.py --opts=config.opts
          python -m dune.fem tutorial
        shell: bash

      - name: Run tutorial
        # macOS fails with python 3.7: Symbol not found: _PyCMethod_New
        if: ${{ matrix.python == '3.9' }} || ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          source dune-env/bin/activate
          export DUNEPY_DISABLE_PLOTTING=1
          export DUNE_LOG_LEVEL=${{ github.event.inputs.logLevel }}
          cd fem_tutorial
          python ../run-tutorial.py ${{ matrix.test }}
        shell: bash

  # https://github.com/marketplace/actions/pypi-publish
  upload:
    needs: test
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: packages
          path: dist

      - name: Publish package to PyPI
        if: ${{ github.event.inputs.upload == 'pypi' }} # && ${{ github.event_name != 'push' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish package to TestPyPI
        if: ${{ github.event.inputs.upload == 'testpypi' }} # && ${{ github.event_name != 'push' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
